isPro: false

clickhouse:
  enabled: false
zookeeper:
  enabled: false
kafka:
  enabled: false

api:
  replicaCount: 1

  image:
    registry: docker.io
    repository: featbit/featbit-api-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 2.3.0

  imagePullSecrets: [ ]

  podAnnotations: { }
  podLabels: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 5000
    nodePort: 30050
    annotations: { }

  ingress:
    enabled: false
    className: "traefik"
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts: [ ]
    #      - host: eval.featbit.test
    #        paths:
    #          - path: /
    #            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  rollout:
    # The max surge in pods during a rollout
    maxSurge: 25%
    # The max unavailable during a rollout
    maxUnavailable: 25%

  resources:
    requests:
      cpu: 250m
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 60

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  # -- Additional env variables to inject into the da server deployment.
#  env: { }

els:
  replicaCount: 1

  image:
    registry: docker.io
    repository: featbit/featbit-evaluation-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 2.3.0

  imagePullSecrets: [ ]

  podAnnotations: { }
  podLabels: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 5100
    nodePort: 30100
    annotations: { }

  ingress:
    enabled: false
    className: "nginx"
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts: [ ]
    #      - host: eval.featbit.test
    #        paths:
    #          - path: /
    #            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  rollout:
    # The max surge in pods during a rollout
    maxSurge: 25%
    # The max unavailable during a rollout
    maxUnavailable: 25%

  resources:
    requests:
      cpu: 250m
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 60

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  # -- Additional env variables to inject into the da server deployment.
  env: { }

# https://github.com/bitnami/charts/blob/main/bitnami/redis/README.md
redis:
  enabled: true
  architecture: standalone
  fullnameOverride: "featbit-redis"
  auth:
    enabled: false
    sentinel: false
  usePassword: false
  ## Just omit the password field if your redis cluster doesn't use password
  # password: redis
  master:
    persistence:
      enabled: true
  # replica defaults to 2
  replica:
    replicaCount: 1

# https://github.com/bitnami/charts/tree/main/bitnami/mongodb
mongodb:
  enabled: true
  fullnameOverride: "featbit-mongodb"
  architecture: standalone
  useStatefulSet: true
  database: featbit
  username: admin
  password: password
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  type: ClusterIP
