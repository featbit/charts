apiExternalUrl: ""
evaluationServerExternalUrl: ""
autoDiscovery: true
isPro: true

ui:
  service:
    type: LoadBalancer
    port: 80


api:
  service:
    type: LoadBalancer
    port: 80

els:
  service:
    type: LoadBalancer
    port: 80

mongodb:
  enabled: false
redis:
  enabled: false
kafka:
  enabled: false
clickhouse:
  enabled: false

externalMongodb:
  fullConnectionString: {Mongodb connection url, ex. mongodb://admin:password@infra-featbit-mongodb:27017}

externalRedis:
  # -- Redis is considered as standalone or replication by default.
  # -- if your external redis is run in sentinel or cluster mode, set sentinel.enabled or cluster.enabled true
  sentinel:
    enabled: false
    # -- External Redis master set name
    masterSet: "mymaster"
  cluster:
    enabled: false
  # -- External Redis Servers in host:port. Put sentinel nodes here in sentinel mode
  hosts: [ ]
  # - infra-featbit-redis:6379
  # -- External Redis database index, ignore in cluster mode
  db: 0
  # -- User for the external Redis server (for use with ACLs on redis 6 and above)
  user: ""
  ssl: false
  # set your password if Redis server auth is enabled
  password: ""

externalKafka:
  # - External Kafka brokers. Ignored if `kafka.enabled` is set to `true`. Multiple brokers can be provided as array/list.
  brokers:
    producers: [ ]
    # - infra-featbit-kafka:9092
    consumers: [ ]
    # - infra-featbit-kafka:9092

externalClickhouse:
  # -- Host of the external cluster.
  host: {ClickHouse host name, ex: "infra-featbit-clickhouse"}
  # -- Name of the external cluster to run DDL queries on.
  cluster: {ClickHouse cluster name, ex: "featbit_ch_cluster"}
  # -- Database name for the external cluster
  database: {ClickHouse database, ex: "featbit"}
  # -- Username for the external cluster to connect to the external cluster as
  user: {ClickHouse username, ex: "default"}
  # -- Password for the cluster. Ignored if existingClickhouse.existingSecret is set
  password: {ClickHouse password, ex: "supersecret"}
  # -- Whether to use TLS connection connecting to ClickHouse
  secure: false
  # -- Whether to verify TLS connection connecting to ClickHouse
  verify: false